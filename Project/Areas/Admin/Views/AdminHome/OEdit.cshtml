@model Project.SQLDataAccess.Entities.Objective

@{
    ViewBag.Title = "OEdit";
}
<style>
    a.my-class {
        color: #000000
    }

        a.my-class:active {
            color: #000000
        }

        a.my-class:link {
            color: #999999
        }

        a.my-class:visited {
            color: #CCCCCC
        }
</style>

<h2>Редактирование таска</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.Label("Название", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Описание", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Статус", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StatusID, ViewBag.Statuses as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-10">
        @Html.HiddenFor(model => model.UserID)
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-success" />
        </div>
    </div>
</div>
}